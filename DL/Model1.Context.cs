//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DL
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class LibreriaEntities : DbContext
    {
        public LibreriaEntities()
            : base("name=LibreriaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Biblioteca> Biblioteca { get; set; }
        public virtual DbSet<Libros> Libros { get; set; }
    
        public virtual ObjectResult<GetBibliotecas_Result> GetBibliotecas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBibliotecas_Result>("GetBibliotecas");
        }
    
        public virtual int AddBiblioteca(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddBiblioteca", nombreParameter);
        }
    
        public virtual int AddLibro(string nombre, Nullable<int> idBiblioteca)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idBibliotecaParameter = idBiblioteca.HasValue ?
                new ObjectParameter("IdBiblioteca", idBiblioteca) :
                new ObjectParameter("IdBiblioteca", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddLibro", nombreParameter, idBibliotecaParameter);
        }
    
        public virtual ObjectResult<GetLibros_Result1> GetLibros()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetLibros_Result1>("GetLibros");
        }
    
        public virtual int UpdateLibro(string nombre, Nullable<int> idBiblioteca, Nullable<int> idLibro)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var idBibliotecaParameter = idBiblioteca.HasValue ?
                new ObjectParameter("IdBiblioteca", idBiblioteca) :
                new ObjectParameter("IdBiblioteca", typeof(int));
    
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateLibro", nombreParameter, idBibliotecaParameter, idLibroParameter);
        }
    
        public virtual int DeleteLibro(Nullable<int> idLibro)
        {
            var idLibroParameter = idLibro.HasValue ?
                new ObjectParameter("IdLibro", idLibro) :
                new ObjectParameter("IdLibro", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteLibro", idLibroParameter);
        }
    
        public virtual ObjectResult<GetBusquedaAbierda_Result2> GetBusquedaAbierda(string nombre)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetBusquedaAbierda_Result2>("GetBusquedaAbierda", nombreParameter);
        }
    }
}
